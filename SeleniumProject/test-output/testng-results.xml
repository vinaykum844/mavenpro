<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="testng" duration-ms="379" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
    <groups>
      <group name="database">
        <method signature="GroupTest.test2()[pri:0, instance:testng.GroupTest@91161c7]" name="test2" class="testng.GroupTest"/>
      </group> <!-- database -->
      <group name="regression">
        <method signature="GroupTest.test1()[pri:0, instance:testng.GroupTest@91161c7]" name="test1" class="testng.GroupTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="GroupTest.test4()[pri:0, instance:testng.GroupTest@91161c7]" name="test4" class="testng.GroupTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="GroupTest.test1()[pri:0, instance:testng.GroupTest@91161c7]" name="test1" class="testng.GroupTest"/>
        <method signature="GroupTest.test2()[pri:0, instance:testng.GroupTest@91161c7]" name="test2" class="testng.GroupTest"/>
        <method signature="GroupTest.test3()[pri:0, instance:testng.GroupTest@91161c7]" name="test3" class="testng.GroupTest"/>
      </group> <!-- sanity -->
    </groups>
    <test name="testng" duration-ms="66" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
      <class name="testng.AllAnnotations">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="test1" duration-ms="3" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="test2" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testng.AllAnnotations -->
    </test> <!-- testng -->
    <test name="grouptest" duration-ms="47" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
      <class name="testng.GroupTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:testng.GroupTest@91161c7]" name="test1" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="setUP()[pri:0, instance:testng.GroupTest@91161c7]" name="setUP" is-config="true" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="test2()[pri:0, instance:testng.GroupTest@91161c7]" name="test2" duration-ms="0" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:testng.GroupTest@91161c7]" name="test3" duration-ms="16" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:testng.GroupTest@91161c7]" name="test4" duration-ms="15" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- testng.GroupTest -->
    </test> <!-- grouptest -->
    <test name="Dependancy" duration-ms="63" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
      <class name="testng.DependsOnTest">
        <test-method status="PASS" signature="login()[pri:0, instance:testng.DependsOnTest@4883b407]" name="login" duration-ms="16" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="logout()[pri:0, instance:testng.DependsOnTest@4883b407]" name="logout" duration-ms="15" started-at="2018-06-28T03:18:48Z" depends-on-methods="testng.DependsOnTest.login" finished-at="2018-06-28T03:18:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testng.DependsOnTest.logout(DependsOnTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="SKIP" signature="test2()[pri:0, instance:testng.DependsOnTest@4883b407]" name="test2" duration-ms="0" started-at="2018-06-28T03:18:48Z" depends-on-methods="testng.DependsOnTest.logout, testng.DependsOnTest.login" finished-at="2018-06-28T03:18:48Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependsOnTest.test2()[pri:0, instance:testng.DependsOnTest@4883b407] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependsOnTest.test2()[pri:0, instance:testng.DependsOnTest@4883b407] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- testng.DependsOnTest -->
    </test> <!-- Dependancy -->
    <test name="parameterTest" duration-ms="47" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
      <class name="testng.ParametersInTestNg">
        <test-method status="PASS" signature="testLogin(java.lang.String, java.lang.String)[pri:0, instance:testng.ParametersInTestNg@77cd7a0]" name="testLogin" duration-ms="16" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[userName123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
      </class> <!-- testng.ParametersInTestNg -->
      <class name="testng.AllAnnotations">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="beforeSuite" is-config="true" duration-ms="15" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testng.AllAnnotations@29ee9faa]" name="afterSuite" is-config="true" duration-ms="16" started-at="2018-06-28T03:18:48Z" finished-at="2018-06-28T03:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testng.AllAnnotations -->
    </test> <!-- parameterTest -->
  </suite> <!-- testng -->
</testng-results>
